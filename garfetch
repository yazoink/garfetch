#!/bin/bash

# dependencies: glxinfo

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
MAGENTA='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

EDGE_COLOR=$RED
USERNAME_COLOR=$YELLOW
AT_SIGN_COLOR=$GREEN
HOSTNAME_COLOR=$CYAN
ARROW_COLOR=$MAGENTA
TITLE_COLOR=$BLUE
ART_COLOR=$YELLOW

CONFIG="garfetch.conf"
ASCII="ascii/garfield2.txt"
SEPARATOR="|"
ARROW="->"
OPERATING_SYSTEM=true
KERNEL=true
DESKTOP=true
TERMINAL=true
TERMINAL_SHELL=true
CPU=true
GPU=true
RAM=true

function main() {
  [ -f "$ASCII" ] \
    || { echo "Error: Ascii art not found. Make sure to include the correct path to it in $CONFIG"
      exit 1; }

  readarray -t asciiArray < "$ASCII"

  longestLineLength=0
  for line in "${asciiArray[@]}"; do
    currentLineLength=${#line}
    [ $currentLineLength -gt $longestLineLength ] \
      && longestLineLength=$currentLineLength
  done

  [ -f "~/.config/garfetch/$CONFIG" ] && . "$CONFIG"
  [ -f "./$CONFIG" ] && . "$CONFIG"
  ARROW="${ARROW_COLOR}$ARROW${NC}"
  SEPARATOR="${EDGE_COLOR}$SEPARATOR${NC}"

  declare -a systemInfo

  lastSystemInfoIndex=0
  [ "$OPERATING_SYSTEM" == true ] \
    && { systemInfo[lastSystemInfoIndex]="$ARROW ${TITLE_COLOR}Operating System:${NC} $(getOperatingSystem)" \
      && ((lastSystemInfoIndex++)); }
  [ "$KERNEL" == true ] \
    &&  { systemInfo[lastSystemInfoIndex]="$ARROW ${TITLE_COLOR}Kernel:${NC} $(getKernel)" \
      && ((lastSystemInfoIndex++)); }
  [ "$DESKTOP" == true ] \
    && { systemInfo[lastSystemInfoIndex]="$ARROW ${TITLE_COLOR}Desktop:${NC} $(getDesktop)" \
      && ((lastSystemInfoIndex++)); }
  [ "$TERMINAL" == true ] \
    && { systemInfo[lastSystemInfoIndex]="$ARROW ${TITLE_COLOR}Terminal:${NC} $(getTerminal)" \
      && ((lastSystemInfoIndex++)); }
  [ "$TERMINAL_SHELL" == true ] \
    && { systemInfo[lastSystemInfoIndex]="$ARROW ${TITLE_COLOR}Shell:${NC} $(echo $SHELL | sed 's/.*\///')" \
      && ((lastSystemInfoIndex++)); }
  [ "$CPU" == true ] \
    && { systemInfo[lastSystemInfoIndex]="$ARROW ${TITLE_COLOR}CPU:${NC} $(getCPU)" \
      && ((lastSystemInfoIndex++)); }
  [ "$GPU" == true ] \
    && { systemInfo[lastSystemInfoIndex]="$ARROW ${TITLE_COLOR}GPU:${NC} $(getGPU)" \
      && ((lastSystemInfoIndex++)); }
  [ "$RAM" == true ] \
    && { systemInfo[lastSystemInfoIndex]="$ARROW ${TITLE_COLOR}Memory:${NC} $(getRAM)" \
      && ((lastSystemInfoIndex++)); }

  for ((i = 0; i < ${#asciiArray[@]}; i++)); do
    line="${asciiArray[$i]}" 

    spaces=$((longestLineLength - ${#line}))
    for ((j = 0; j < spaces; j++)); do
      line+=" "
    done

    printf "${ART_COLOR}%s${NC}" "$line"
    [ $i -eq 1 ] \
      && printf "  ${EDGE_COLOR}{${USERNAME_COLOR}$USER${AT_SIGN_COLOR}@${HOSTNAME_COLOR}$(getHostname)${RED}}${NC}"
    [ $i -gt 1 ] \
      && [ $i -lt $((${#systemInfo[@]} + 1)) ] && printf "  $SEPARATOR" \
      && [ -n "${systemInfo[i - 1]}" ] \
      && printf  "${systemInfo[i - 1]}\n" \
      || printf "\n"
  done
}

function getCPU() {
  cpu="$(grep "model name" /proc/cpuinfo | sed 's/.*: //' | head -n 1 || echo "Unknown")"
  echo "$cpu"
}

function getDesktop() {
  [ -n "$XDG_CURRENT_DESKTOP" ] \
    && { echo "$XDG_CURRENT_DESKTOP" \
    || { [ -n "$DESKTOP_SESSION" ] \
      && echo "$DESKTOP_SESSION"; } \
      || echo "Unknown"; }
}

function getGPU() {
  gpu="$(glxinfo | grep "OpenGL renderer string" | sed 's/OpenGL renderer string: //; s/ (.*//' \
    || echo "Unknown")"
  echo "$gpu"
}

function getHostname() {
  hostName=$(hostname || cat /etc/hostname || echo "Unknown")
  echo "$hostName"
}

function getKernel() {
  name="$(uname -s)"
  release="$(uname -r)"
  echo "$name $release"
}

function getRAM() {
  ram=$(free -h | awk '/^Mem:/ {print $2}' || echo "Unknown")
  echo "$ram"
}

function getShell() {
  echo "$SHELL"
}

function getOperatingSystem() {
  if . /etc/os-release; then
    echo "$PRETTY_NAME"
  elif . /etc/lsb-release; then
    echo "$DISTRIB_DESCRIPTION"
  else
    operatingSystem="$(uname -o || echo "Unknown")"
    echo "$operatingSystem"
  fi
}

function getTerminal() {
  [ -n "$TERM" ] \
    && terminal="$TERM" \
    || terminal="Unknown"
  echo "$terminal"
}

main
